import struct,array,time,os,sys,math,string
import cv2
import numpy as np

def preprocess(orig_image):

	filter = np.uint8([[[0,0,255]]])
	height,width = orig_image.shape[:2]	
	new_image = np.zeros((height,width,3),np.uint8)
	proc_image = cv2.cvtColor(orig_image,cv2.COLOR_BGR2HSV)
	proc_image = proc_image * filter
	proc_image = cv2.cvtColor(proc_image,cv2.COLOR_BGR2GRAY)
	#proc_image = cv2.equalizeHist(proc_image)
	(thresh,thresh_image) = cv2.threshold(proc_image,50,255,cv2.THRESH_BINARY_INV)
	#new_image[...,0] = thresh_image * orig_image[...,0]
	new_image[...,1] = thresh_image * orig_image[...,1]
	new_image[...,2] = thresh_image * orig_image[...,2]	
	new_image = cv2.cvtColor(new_image,cv2.COLOR_BGR2GRAY)
	new_image = cv2.resize(new_image,None,fx=1,fy=1)
	#RESIZEFACTOR = 0.05
	return new_image
class train_item:
	def __init__(self,trainclass,trainindex,trainpath,traincenterx,traincentery,trainorigimage,trainprocimage):
		self.trainclass = trainclass
		self.trainindex = trainindex
		self.trainpath = trainpath
		self.traincenterx = traincenterx
		self.traincentery = traincentery
		self.trainorigimage = trainorigimage
		self.trainprocimage = trainprocimage
